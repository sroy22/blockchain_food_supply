{"ast":null,"code":"import _classCallCheck from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\src\\\\WeatherApp.js\";\nimport React from 'react'; // import './App.scss';\n\nimport { WeatherData } from './WeatherData';\nimport { StatusData } from './StatusData';\n\nvar WeatherApp = /*#__PURE__*/function (_React$Component) {\n  _inherits(WeatherApp, _React$Component);\n\n  function WeatherApp(props) {\n    var _this;\n\n    _classCallCheck(this, WeatherApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeatherApp).call(this, props));\n    _this.abortController = new AbortController();\n    _this.controllerSignal = _this.abortController.signal;\n\n    _this.weatherInit = function () {\n      var success = function success(position) {\n        console.log(position);\n\n        _this.setState({\n          status: 'fetching'\n        });\n\n        _this.getWeatherData(position.coords.latitude, position.coords.longitude);\n      };\n\n      var error = function error() {\n        _this.setState({\n          status: 'unable'\n        });\n\n        alert('Unable to retrieve location.');\n      };\n\n      if (navigator.geolocation) {\n        console.log(\"Herel\");\n\n        _this.setState({\n          status: 'fetching'\n        });\n\n        console.log(\"Herel\");\n        navigator.geolocation.getCurrentPosition(success, error);\n        console.log(\"Herel\");\n      } else {\n        _this.setState({\n          status: 'unsupported'\n        });\n\n        alert('Your browser does not support location tracking, or permission is denied.');\n      }\n    };\n\n    _this.getWeatherData = function (lat, lon) {\n      console.log(lat, lon); //const weatherApi = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`;\n\n      var weatherApi = 'http://api.openweathermap.org/data/2.5/weather?lat=43.6690119&lon=-79.391594&units=metric&appid=7f3854a13e075772db49937ef6b4cca9';\n      fetch(weatherApi, {\n        signal: _this.controllerSignal\n      }).then(function (response) {\n        return response.json();\n      }).then(function (result) {\n        console.log(result);\n        var name = result.name;\n        var country = result.sys.country;\n        var _result$main = result.main,\n            temp = _result$main.temp,\n            temp_min = _result$main.temp_min,\n            temp_max = _result$main.temp_max,\n            feels_like = _result$main.feels_like,\n            humidity = _result$main.humidity;\n        var _result$weather$ = result.weather[0],\n            description = _result$weather$.description,\n            icon = _result$weather$.icon;\n        var _result$wind = result.wind,\n            speed = _result$wind.speed,\n            deg = _result$wind.deg;\n\n        _this.setState({\n          status: 'success',\n          isLoaded: true,\n          weatherData: {\n            name: name,\n            country: country,\n            description: description,\n            icon: icon,\n            temp: temp.toFixed(1),\n            feels_like: feels_like.toFixed(1),\n            temp_min: temp_min.toFixed(1),\n            temp_max: temp_max.toFixed(1),\n            speed: speed,\n            deg: deg,\n            humidity: humidity\n          }\n        });\n      }, function (error) {\n        _this.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    };\n\n    _this.returnActiveView = function (status) {\n      switch (status) {\n        case 'init':\n          return /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn-main\",\n            onClick: _this.onClick,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }\n          }, \"Get My Location\");\n\n        case 'success':\n          return /*#__PURE__*/React.createElement(WeatherData, {\n            data: _this.state.weatherData,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(StatusData, {\n            status: status,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    _this.onClick = function () {\n      _this.weatherInit();\n    };\n\n    _this.state = {\n      status: 'init',\n      isLoaded: false,\n      weatherData: null\n    };\n    return _this;\n  }\n\n  _createClass(WeatherApp, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, this.returnActiveView(this.state.status)));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.weatherInit();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.abortController.abort();\n    } // render() {\n    //   return (\n    //     <div className='App'>\n    //       <div className='container'>\n    //         <WeatherData data={this.state.weatherData}/>\n    //       </div>\n    //     </div>\n    //   );\n    //   }\n\n  }]);\n\n  return WeatherApp;\n}(React.Component);\n\nexport default WeatherApp;","map":{"version":3,"sources":["C:/MscAC/Blockchain/2125/Code/src/WeatherApp.js"],"names":["React","WeatherData","StatusData","WeatherApp","props","abortController","AbortController","controllerSignal","signal","weatherInit","success","position","console","log","setState","status","getWeatherData","coords","latitude","longitude","error","alert","navigator","geolocation","getCurrentPosition","lat","lon","weatherApi","fetch","then","response","json","result","name","country","sys","main","temp","temp_min","temp_max","feels_like","humidity","weather","description","icon","wind","speed","deg","isLoaded","weatherData","toFixed","returnActiveView","onClick","state","abort","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import './App.scss';\r\nimport { WeatherData } from './WeatherData';\r\nimport { StatusData } from './StatusData';\r\n\r\nclass WeatherApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: 'init',\r\n      isLoaded: false,\r\n      weatherData: null\r\n    }\r\n  }\r\n\r\n  abortController = new AbortController();\r\n  controllerSignal = this.abortController.signal;\r\n\r\n  weatherInit = () => {\r\n\r\n    const success = (position) => {\r\n      console.log(position);\r\n      this.setState({status: 'fetching'});\r\n      this.getWeatherData(position.coords.latitude, position.coords.longitude);\r\n    }\r\n  \r\n    const error = () => {\r\n      this.setState({status: 'unable'});\r\n      alert('Unable to retrieve location.');\r\n    }\r\n  \r\n    if (navigator.geolocation) {\r\n      console.log(\"Herel\");\r\n      this.setState({status: 'fetching'});\r\n      console.log(\"Herel\");\r\n\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n      console.log(\"Herel\");\r\n\r\n    } else {\r\n      this.setState({status: 'unsupported'});\r\n      alert('Your browser does not support location tracking, or permission is denied.');\r\n    }\r\n  }\r\n\r\n  getWeatherData = (lat, lon) => {\r\n    console.log(lat,lon);\r\n    //const weatherApi = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`;\r\n  const weatherApi = 'http://api.openweathermap.org/data/2.5/weather?lat=43.6690119&lon=-79.391594&units=metric&appid=7f3854a13e075772db49937ef6b4cca9'\r\n    fetch(weatherApi, { signal: this.controllerSignal })\r\n    .then(response => response.json())\r\n    .then((result) => {\r\n        console.log(result);\r\n        const { name } = result;\r\n        const { country } = result.sys;\r\n        const { temp, temp_min, temp_max, feels_like, humidity } = result.main;\r\n        const { description, icon } = result.weather[0];\r\n        const { speed, deg } = result.wind;\r\n  \r\n        this.setState({\r\n          status: 'success',\r\n          isLoaded: true,\r\n          weatherData: {\r\n            name,\r\n            country,\r\n            description,\r\n            icon,\r\n            temp: temp.toFixed(1),\r\n            feels_like: feels_like.toFixed(1),\r\n            temp_min: temp_min.toFixed(1),\r\n            temp_max: temp_max.toFixed(1),\r\n            speed,\r\n            deg,\r\n            humidity\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  returnActiveView = (status) => {\r\n    switch(status) {\r\n      case 'init':\r\n        return(\r\n          <button \r\n          className='btn-main' \r\n          onClick={this.onClick}\r\n          >\r\n            Get My Location\r\n          </button>\r\n        );\r\n      case 'success':\r\n        return <WeatherData data={this.state.weatherData} />;\r\n      default:\r\n        return <StatusData status={status} />;\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <div className='container'>\r\n          {this.returnActiveView(this.state.status)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onClick = () => {\r\n    this.weatherInit();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.weatherInit();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.abortController.abort();\r\n  }\r\n\r\n  // render() {\r\n  //   return (\r\n  //     <div className='App'>\r\n  //       <div className='container'>\r\n  //         <WeatherData data={this.state.weatherData}/>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  //   }\r\n}\r\n\r\nexport default WeatherApp;"]},"metadata":{},"sourceType":"module"}