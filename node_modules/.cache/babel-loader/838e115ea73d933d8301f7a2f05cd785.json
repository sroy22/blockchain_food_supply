{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\MscAC\\\\Blockchain\\\\2125\\\\Code\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport Investment from './abis/Investment.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport Weather from './Weather';\nimport WeatherApp from './WeatherApp';\nimport Marketplace from './abis/Marketplace.json';\n\nfunction Example() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      investment = _useState4[0],\n      setInvestment = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      marketplace = _useState6[0],\n      setMarketplace = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      farmerCount = _useState8[0],\n      setFarmerCount = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      farmers = _useState10[0],\n      setFarmers = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      productCount = _useState12[0],\n      setProductCount = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      products = _useState14[0],\n      setProducts = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      pro = _useState16[0],\n      setPro = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      initial = _useState18[0],\n      setInitial = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      investorCount = _useState20[0],\n      SetInvestorCount = _useState20[1];\n\n  function loadWeb3() {\n    return _loadWeb.apply(this, arguments);\n  }\n\n  function _loadWeb() {\n    _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context2.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context2.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context2.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _loadWeb.apply(this, arguments);\n  }\n\n  function loadBlockchainData() {\n    return _loadBlockchainData.apply(this, arguments);\n  }\n\n  function _loadBlockchainData() {\n    _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, accounts, networkId, networkData, place, count, dealcount, p, deals, c, i, farmer, deal, networkDataMarketplace, _place, _count, _p, _deals, _c, _farmer;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              web3 = window.web3; // Load account\n\n              _context3.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context3.sent;\n              setInitial(accounts[0]);\n              setAccount(accounts[0]); //this.setState({ account: accounts[0] })\n\n              _context3.next = 8;\n              return web3.eth.net.getId();\n\n            case 8:\n              networkId = _context3.sent;\n              networkData = Investment.networks[networkId];\n\n              if (!networkData) {\n                _context3.next = 44;\n                break;\n              }\n\n              place = new web3.eth.Contract(Investment.abi, networkData.address);\n              setInvestment(place);\n              _context3.next = 15;\n              return place.methods.farmerCount().call();\n\n            case 15:\n              count = _context3.sent;\n              setFarmerCount(count); // Load products\n\n              _context3.next = 19;\n              return place.methods.dealCount().call();\n\n            case 19:\n              dealcount = _context3.sent;\n              SetInvestorCount(dealcount);\n              p = [];\n              deals = [];\n              i = 1;\n\n            case 24:\n              if (!(i <= count)) {\n                _context3.next = 32;\n                break;\n              }\n\n              _context3.next = 27;\n              return place.methods.farmers(i).call();\n\n            case 27:\n              farmer = _context3.sent;\n              p.push(farmer);\n\n            case 29:\n              i++;\n              _context3.next = 24;\n              break;\n\n            case 32:\n              i = 1;\n\n            case 33:\n              if (!(i <= dealcount)) {\n                _context3.next = 41;\n                break;\n              }\n\n              _context3.next = 36;\n              return place.methods.deals(i).call();\n\n            case 36:\n              deal = _context3.sent;\n              deals.push(deal);\n\n            case 38:\n              i++;\n              _context3.next = 33;\n              break;\n\n            case 41:\n              setFarmers(p);\n              _context3.next = 45;\n              break;\n\n            case 44:\n              window.alert('Marketplace contract not deployed to detected network.');\n\n            case 45:\n              networkDataMarketplace = Marketplace.networks[networkId];\n\n              if (!networkDataMarketplace) {\n                _context3.next = 68;\n                break;\n              }\n\n              _place = new web3.eth.Contract(Marketplace.abi, networkDataMarketplace.address);\n              setMarketplace(_place);\n              _context3.next = 51;\n              return _place.methods.productCount().call();\n\n            case 51:\n              _count = _context3.sent;\n              console.log(_count);\n              setProductCount(_count); // Load products\n\n              _p = [];\n              _deals = [];\n              i = 1;\n\n            case 57:\n              if (!(i <= _count)) {\n                _context3.next = 65;\n                break;\n              }\n\n              _context3.next = 60;\n              return _place.methods.products(i).call();\n\n            case 60:\n              _farmer = _context3.sent;\n\n              _p.push(_farmer);\n\n            case 62:\n              i++;\n              _context3.next = 57;\n              break;\n\n            case 65:\n              setProducts(_p);\n              _context3.next = 69;\n              break;\n\n            case 68:\n              window.alert('Marketplace contract not deployed to detected network.');\n\n            case 69:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _loadBlockchainData.apply(this, arguments);\n  }\n\n  function createInsurance(_x, _x2) {\n    return _createInsurance.apply(this, arguments);\n  }\n\n  function _createInsurance() {\n    _createInsurance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name, price) {\n      var delayInMilliseconds;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log(initial);\n              console.log(\"Hhsjdhfskj\");\n              marketplace.methods.createProduct(name, price, initial).send({\n                from: account,\n                value: price\n              }).on('transactionHash', function (hash) {\n                setPro(1);\n              });\n              delayInMilliseconds = 8000; //1 second\n\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        //your code to be executed after 1 second\n                        loadBlockchainData();\n\n                      case 1:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              })), delayInMilliseconds); // let tx = await marketplace.methods.createProduct(name, price).send({ from: account })\n              // tx.wait().then({\n              //   loadBlockchainData\n              // })\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _createInsurance.apply(this, arguments);\n  }\n\n  function reimburse(id, price) {\n    console.log(price);\n    console.log(id);\n    console.log(initial);\n    console.log(account);\n    marketplace.methods.purchaseProduct(id).send({\n      from: account,\n      value: price,\n      to: initial\n    }).once('receipt', function (receipt) {//      this.setState({ loading: false })\n    });\n    var delayInMilliseconds = 8000; //1 second\n\n    setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //your code to be executed after 1 second\n              loadBlockchainData();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), delayInMilliseconds);\n  }\n\n  window.ethereum.on('accountsChanged', function (accounts) {\n    // Time to reload your interface with accounts[0]!\n    console.log(accounts);\n    setAccount(accounts[0]);\n  });\n\n  function createProduct(_x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {\n    return _createProduct.apply(this, arguments);\n  }\n\n  function _createProduct() {\n    _createProduct = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(name, location, crop, quantity, price, expiryDate, holding, costToProduce) {\n      var delayInMilliseconds;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              investment.methods.createFarmer(name, location, crop, quantity, price, expiryDate, holding, costToProduce).send({\n                from: account\n              });\n              delayInMilliseconds = 8000; //1 second\n\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        //your code to be executed after 1 second\n                        loadBlockchainData();\n\n                      case 1:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              })), delayInMilliseconds);\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _createProduct.apply(this, arguments);\n  }\n\n  function payBackToInvestor(_x11) {\n    return _payBackToInvestor.apply(this, arguments);\n  }\n\n  function _payBackToInvestor() {\n    _payBackToInvestor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n      var deals, i, deal;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              console.log(\"Hello\");\n              console.log(investorCount);\n              deals = [];\n              i = 1;\n\n            case 4:\n              if (!(i <= investorCount)) {\n                _context8.next = 14;\n                break;\n              }\n\n              _context8.next = 7;\n              return investment.methods.deals(i).call();\n\n            case 7:\n              deal = _context8.sent;\n              deal.amount = deal.amount;\n              investment.methods.repay(deal.farmerID).send({\n                from: account,\n                value: deal.amount,\n                to: deal.investorAddress\n              });\n              deals.push(deal);\n\n            case 11:\n              i++;\n              _context8.next = 4;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _payBackToInvestor.apply(this, arguments);\n  }\n\n  function purchaseProduct(_x12, _x13, _x14) {\n    return _purchaseProduct.apply(this, arguments);\n  }\n\n  function _purchaseProduct() {\n    _purchaseProduct = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(id, costToProduce, holdingPercent) {\n      var price, farmer, delayInMilliseconds;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              price = holdingPercent * 0.01 * costToProduce + \"000000000000000000\";\n              _context10.next = 3;\n              return investment.methods.farmers(id).call();\n\n            case 3:\n              farmer = _context10.sent;\n              investment.methods.purchaseProduct(id).send({\n                from: account,\n                value: price,\n                to: initial\n              });\n              investment.methods.createAgreement(id, price, holdingPercent).send({\n                from: account\n              }).on('transactionHash', function (hash) {\n                setPro(1);\n              });\n              delayInMilliseconds = 8000; //1 second\n\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        //your code to be executed after 1 second\n                        loadBlockchainData();\n\n                      case 1:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              })), delayInMilliseconds);\n\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _purchaseProduct.apply(this, arguments);\n  }\n\n  window.ethereum.on('accountsChanged', function (accounts) {\n    // Time to reload your interface with accounts[0]!\n    setAccount(accounts[0]);\n  }); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(function () {\n    loadWeb3();\n    loadBlockchainData(); // Update the document title using the browser API\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    account: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-lg-12 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    products: farmers,\n    createProduct: createProduct,\n    purchaseProduct: purchaseProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: payBackToInvestor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"Pay back to investors\")))));\n}\n\nexport default Example;","map":{"version":3,"sources":["C:/MscAC/Blockchain/2125/Code/src/App.js"],"names":["React","useState","useEffect","Web3","Investment","Navbar","Main","Weather","WeatherApp","Marketplace","Example","account","setAccount","investment","setInvestment","marketplace","setMarketplace","farmerCount","setFarmerCount","farmers","setFarmers","productCount","setProductCount","products","setProducts","pro","setPro","initial","setInitial","investorCount","SetInvestorCount","loadWeb3","window","ethereum","web3","enable","currentProvider","alert","loadBlockchainData","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","place","Contract","abi","address","methods","call","count","dealCount","dealcount","p","deals","i","farmer","push","deal","networkDataMarketplace","console","log","createInsurance","name","price","createProduct","send","from","value","on","hash","delayInMilliseconds","setTimeout","reimburse","id","purchaseProduct","to","once","receipt","location","crop","quantity","expiryDate","holding","costToProduce","createFarmer","payBackToInvestor","event","amount","repay","farmerID","investorAddress","holdingPercent","createAgreement"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3'\nimport Investment from './abis/Investment.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport Weather from './Weather';\nimport WeatherApp from './WeatherApp';\nimport Marketplace from './abis/Marketplace.json'\n\n\n\nfunction Example() {\n  const [account, setAccount] = useState(0);\n  const [investment, setInvestment] = useState(null);\n  const [marketplace, setMarketplace] = useState(null);\n\n  const [farmerCount, setFarmerCount] = useState(0);\n  const [farmers, setFarmers] = useState([]);\n\n  const [productCount, setProductCount] = useState(0);\n  const [products, setProducts] = useState([]);\n\n  const [pro, setPro] = useState(0);\n  const [initial, setInitial] = useState(0);\n  const [investorCount, SetInvestorCount] = useState(0);\n\n  async function loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n  async function loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    setInitial(accounts[0]);\n    setAccount(accounts[0]);\n    //this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Investment.networks[networkId]\n    if(networkData) {\n      const place = new web3.eth.Contract(Investment.abi, networkData.address)\n      setInvestment(place);\n      const count = await place.methods.farmerCount().call()\n      setFarmerCount(count);\n      // Load products\n\n      const dealcount = await place.methods.dealCount().call()\n      SetInvestorCount(dealcount);\n      let p = []\n      let deals = [];\n      let c;\n      for (var i = 1; i <= count; i++) {\n        const farmer = await place.methods.farmers(i).call()\n        p.push(farmer);\n      }\n      for (var i = 1; i <= dealcount; i++) {\n        const deal = await place.methods.deals(i).call()\n        deals.push(deal);\n      }\n      setFarmers(p);\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n\n    const networkDataMarketplace = Marketplace.networks[networkId]\n    if(networkDataMarketplace) {\n      const place = new web3.eth.Contract(Marketplace.abi, networkDataMarketplace.address)\n      setMarketplace(place);\n      const count = await place.methods.productCount().call()\n      console.log(count);\n      setProductCount(count);\n      // Load products\n\n      let p = []\n      let deals = [];\n      let c;\n      for (var i = 1; i <= count; i++) {\n        const farmer = await place.methods.products(i).call()\n        p.push(farmer);\n      }\n      setProducts(p);\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n  }\n\n\n  async function createInsurance(name, price) {\n    console.log(initial);\n     console.log(\"Hhsjdhfskj\");\n     marketplace.methods.createProduct(name, price, initial).send({ from: account, value: price })\n     .on('transactionHash', (hash) => {\n       setPro(1);\n     })\n \n     var delayInMilliseconds = 8000; //1 second\n \n setTimeout( async function() {\n   //your code to be executed after 1 second\n   loadBlockchainData();\n \n }, delayInMilliseconds);\n \n     // let tx = await marketplace.methods.createProduct(name, price).send({ from: account })\n     // tx.wait().then({\n     //   loadBlockchainData\n     // })\n   }\n \n   function   reimburse(id, price) {\n     console.log(price);\n     console.log(id);\n     console.log(initial);\n     console.log(account);\n      marketplace.methods.purchaseProduct(id).send({ from: account, value: price, to: initial })\n     .once('receipt', (receipt) => {\n //      this.setState({ loading: false })\n     })\n \n \n     var delayInMilliseconds = 8000; //1 second\n \n setTimeout( async function() {\n   //your code to be executed after 1 second\n   loadBlockchainData();\n \n }, delayInMilliseconds);\n   }\n   window.ethereum.on('accountsChanged', function (accounts) {\n     // Time to reload your interface with accounts[0]!\n     console.log(accounts);\n     setAccount(accounts[0])\n   })\n  \n async function createProduct(name, location, crop, quantity, price, expiryDate, holding, costToProduce) {\n    investment.methods.createFarmer(name, location, crop, quantity, price, expiryDate, holding, costToProduce).send({ from: account })\n    var delayInMilliseconds = 8000; //1 second\nsetTimeout( async function() {\n  //your code to be executed after 1 second\n  loadBlockchainData();\n\n}, delayInMilliseconds);\n  }\n\n\n\n  async function payBackToInvestor(event){\n    console.log(\"Hello\");\n    console.log(investorCount);\n    let deals = [];\n    for (var i = 1; i <= investorCount; i++) {\n      const deal = await investment.methods.deals(i).call()\n      deal.amount = deal.amount;\n      investment.methods.repay(deal.farmerID).send({ from: account, value: deal.amount, to: deal.investorAddress})\n      deals.push(deal);\n    }\n  }\n\n async function   purchaseProduct(id, costToProduce, holdingPercent) {\n    const price = holdingPercent*0.01*costToProduce +  \"000000000000000000\";\n    const farmer = await investment.methods.farmers(id).call();\n     investment.methods.purchaseProduct(id).send({ from: account, value: price, to: initial })\n\n    investment.methods.createAgreement(id,price, holdingPercent).send({ from: account })\n    .on('transactionHash', (hash) => {\n      setPro(1);\n    })\n        var delayInMilliseconds = 8000; //1 second\n\nsetTimeout( async function() {\n  //your code to be executed after 1 second\n  loadBlockchainData();\n\n}, delayInMilliseconds);\n  }\n  window.ethereum.on('accountsChanged', function (accounts) {\n    // Time to reload your interface with accounts[0]!\n    setAccount(accounts[0])\n  })\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n    // Update the document title using the browser API\n  }, []);\n  \n\n  return (\n    <div>\n    <Navbar account={account} />\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row\">\n        <main role=\"main\" className=\"col-lg-12 d-flex\">\n          \n            <div> \n            <Main\n              products={farmers}\n              createProduct={createProduct}\n              purchaseProduct={purchaseProduct} />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick= {payBackToInvestor}>Pay back to investors</button>\n        \n        {/* <Weather\n          customers = {products}\n          createInsurance = {createInsurance}\n          reimburse = {reimburse}\n        /> */}\n        </main>\n      </div>\n    </div>\n  </div>\n  );\n}\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}